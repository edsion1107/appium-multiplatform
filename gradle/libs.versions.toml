[versions]
agp = "8.10.1"  # limited by IDEA and Android plugins, currently supporting up to 8.10.x, latest: 8.11.1
androidTools = "31.11.1"  # tools like ddmlib are mostly backward compatible; keep version â‰¥ AGP; usually safe to use latest.
androidx-core = "1.16.0"
androidx-espresso = "3.6.1"
androidx-testExt = "1.2.1"
composeMultiplatform = "1.8.1"
junit = "4.13.2"
kotlin = "2.1.21"
ktor = "3.2.0"
koin = "4.1.0"
kotest = "5.9.1"
kotlin-logging = "7.0.7"
monitor = "1.7.2"
atomicfu = "0.28.0"
ktx-coroutines = "1.10.2"
uiautomator = "2.4.0-alpha05"
uiautomator-shell = "1.0.0-alpha01"
androidx-test-runner = "1.7.0-beta01"
adblib = "8.11.0"
hiddenapibypass = "6.1"
slf4j = "2.1.0-alpha1"
hoplite = "3.0.0.RC1"

[libraries]
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
ktor-server-core = { module = "io.ktor:ktor-server-core" }
ktor-server-cio = { module = "io.ktor:ktor-server-cio" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty" }  # not support android
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml" }
ktor-bom = { module = "io.ktor:ktor-bom", version.ref = "ktor" }
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin" }
kotest-bom = { module = "io.kotest:kotest-bom", version.ref = "kotest" }
koin-ktor = { module = "io.insert-koin:koin-ktor" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-logging = { module = "io.github.oshai:kotlin-logging", version.ref = "kotlin-logging" }
kotlin-testJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { module = "junit:junit", version.ref = "junit" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-testExt-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-testExt" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso" }
uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "uiautomator" }
uiautomator-shell = { module = "androidx.test.uiautomator:uiautomator-shell", version.ref = "uiautomator-shell" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test-runner" }
androidx-monitor = { group = "androidx.test", name = "monitor", version.ref = "monitor" }
adblib = { module = "com.android.tools.adblib:adblib", version.ref = "adblib" }
hiddenapibypass = { module = "org.lsposed.hiddenapibypass:hiddenapibypass", version.ref = "hiddenapibypass" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
hoplite-toml = { module = "com.sksamuel.hoplite:hoplite-toml", version.ref = "hoplite" }

# Dependencies of the included build-logic
kotlinAndroid-gradlePlugin = { module = "org.jetbrains.kotlin.android:org.jetbrains.kotlin.android.gradle.plugin", version.ref = "kotlin" }
android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "agp" }
android-gradle-builder-test-api = { module = "com.android.tools.build:builder-test-api", version.ref = "agp" }
android-tools-common = { module = "com.android.tools:common", version.ref = "androidTools" }
android-tools-ddmlib = { module = "com.android.tools.ddms:ddmlib", version.ref = "androidTools" }
kotlinx-coroutines-core-jvm = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm", version.ref = "ktx-coroutines" }

[bundles]
ktor-server = ["ktor-server-core", "ktor-server-cio", "ktor-server-config-yaml"]
androidx-test = ["androidx-test-runner", "uiautomator", "uiautomator-shell"]
appRuntime-plugin = ["android-gradle-plugin", "android-gradle-builder-test-api", "android-tools-ddmlib"] # AppRuntimePlugin required

[plugins]
project-report = { id = "project-report" }
android-application = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }

# Single variant architecture & Tests disabled by default, `androidLibrary` is marked unstable
# https://developer.android.com/kotlin/multiplatform/plugin?hl=zh-cn#features
android-kotlin-multiplatform-library = { id = "com.android.kotlin.multiplatform.library", version.ref = "agp" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }  # adds the Ktor BOM
atomicfu = { id = "org.jetbrains.kotlinx.atomicfu", version.ref = "atomicfu" }

# Plugins defined by this project
android-convention-plugin = { id = "AndroidConventionPlugin" }
android-app-runtime-plugin = { id = "AppRuntimePlugin" }